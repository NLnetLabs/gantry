---
# VENDOR=Nokia/Alcatel SROS
# DROPLET_SIZE=s-4vcpu-8gb
- hosts: routers
  vars:
    registry_repo: nlnetlabs
  tasks:
  - name: Include pre tasks common to all routers
    include_tasks: tasks-router-common-pre.yml

  # Note: Run with ANSIBLE_PARAMIKO_HOST_KEY_AUTO_ADD=True to avoid Paramiko SSH error authenticity of host can't be
  # established. It seems to only be configurable from environment variables set BEFORE Ansible runs, or in ansible.cfg,
  # and Paramiko SSH seems to read known_hosts files BEFORE the Ansible playbook is executed, so we can't write logic in
  # this playbook to change the Paramiko behaviour or to supply the missing host key.
  - block:
    - name: "ON ROUTER {{ inventory_hostname }} @ {{ ansible_host }}: ENABLE PORT 1/1/1 (user: {{ router_user }}, pass: {{ router_pass }}, port: {{ router_port_external }}"
      sros_config:
        lines: "configure port 1/1/1 no shutdown"
    
    - name: "ON ROUTER {{ inventory_hostname }} @ {{ ansible_host }}: ENABLE ROUTER OUTBOUND CONNECTIVITY VIA PORT 1/1/1"
      sros_config:
        lines:
          - "configure router interface \"out\" port 1/1/1"
          - "configure router interface \"out\" address 192.168.76.9/24"
          - "configure router interface \"out\" ip-helper-address 192.168.76.2"
          - "configure router \"Base\" static-route-entry 0.0.0.0/0 next-hop 192.168.76.2 no shutdown"

    - name: "ON ROUTER {{ inventory_hostname }} @ {{ ansible_host }}: ENABLE RPKI ORIGIN VALIDATION VIA ROUTINATOR @ {{ routinator_ip }}:{{ routinator_port }}"
      sros_config:
        lines:
          - "configure router \"Base\" origin-validation rpki-session {{ routinator_ip }} port {{ routinator_port }}"
          - "configure router \"Base\" origin-validation rpki-session {{ routinator_ip }} no shutdown"

    - name: "ON ROUTER {{ inventory_hostname }} @ {{ ansible_host }}: WAIT FOR CONNECTION ESTABLISHED TO THE ROUTINATOR"
      sros_command:
        commands: show router origin-validation rpki-session
        wait_for: result[0] contains established
      register: result

    - debug: var=result.stdout_lines

    - name: Include post tasks common to all routers
      include_tasks: tasks-router-common-post.yml

    when: hostvars[inventory_hostname].dm_tags.find(component_name) != -1
    connection: local
    vars:
      router_ip: "{{ ansible_host }}"
      routinator_ip: "{{ hostvars['routinator'].ansible_host }}"
      provider:
        host: "{{ ansible_host }}"
        username: "{{ router_user }}"
        password: "{{ router_pass }}"
        port: "{{ router_port_external }}"
    module_defaults:
      sros_config:
        provider: "{{ provider }}"
      sros_command:
        provider: "{{ provider }}"
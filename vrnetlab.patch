diff --git a/sros/docker/launch.py b/sros/docker/launch.py
index 30e5047..9bcffe0 100755
--- a/sros/docker/launch.py
+++ b/sros/docker/launch.py
@@ -169,6 +169,16 @@ class SROS_integrated(SROS_vm):
 
 
 
+    def gen_nics(self):
+        """ Generate qemu args to create a port device capable of connecting outside
+        """
+        res = []
+        res.extend(["-device", "e1000,netdev=port1,mac=%s" % vrnetlab.gen_mac(2)])
+        res.extend(["-netdev", "user,id=port1,net=192.168.76.0/24,dhcpstart=192.168.76.9"])
+        return res
+
+
+
     def bootstrap_config(self):
         """ Do the actual bootstrap config
         """
diff --git a/vmx/docker/launch.py b/vmx/docker/launch.py
index 7b1776a..78105a8 100755
--- a/vmx/docker/launch.py
+++ b/vmx/docker/launch.py
@@ -75,6 +75,14 @@ class VMX_vcp(vrnetlab.VM):
         return res
 
 
+    def gen_nics(self):
+        """ Generate qemu args to create a port device capable of connecting outside
+        """
+        res = []
+        res.extend(["-device", "e1000,netdev=port1,mac=%s" % vrnetlab.gen_mac(2)])
+        res.extend(["-netdev", "user,id=port1,net=192.168.76.0/24,dhcpstart=192.168.76.9"])
+        return res
+
 
     def bootstrap_spin(self):
         """ This function should be called periodically to do work.
@@ -98,7 +106,37 @@ class VMX_vcp(vrnetlab.VM):
             if ridx == 1:
                 if self.install_mode:
                     self.logger.info("requesting power-off")
-                    self.wait_write("cli", None)
+
+                    #self.wait_write("cli", None)
+                    # Patched per https://github.com/plajjan/vrnetlab/issues/183#issuecomment-452022357
+                    # with a sleep of 10 seconds and 30 seconds I still encountered the auto image upgrade...
+                    # 2019-04-16 08:15:23,959: launch     INFO     requesting power-off
+                    # 2019-04-16 08:15:23,959: launch     DEBUG    writing to serial console: /usr/sbin/mgd "-ZS" "intialsetup-commit" "ex_series_auto_config"
+                    # 2019-04-16 08:15:53,989: launch     TRACE    Waiting for root@(%|:~ #)
+                    # 2019-04-16 08:15:53,990: launch     TRACE    Read:  /usr/sbin/mgd "-ZS" "intialsetup-commit" "ex_series_auto_config"
+                    # mgd: commit complete
+                    # root@:~ #
+                    # 2019-04-16 08:15:53,990: launch     DEBUG    writing to serial console: cli
+                    # 2019-04-16 08:15:53,990: launch     TRACE    Waiting for >
+                    # 2019-04-16 08:15:54,075: launch     TRACE    Read:                                                                                 
+                    # Auto Image Upgrade: DHCP OFFER Client fxp0.0: Invalid config.                  
+                    # No File Server Information. OFFER REJECTED.                                                                                
+                    #                                                                        # 
+                    # Broadcast Message from root@                                                   
+                    #         (no tty) at 8:15 UTC...                                                
+                    #                                                                           
+                    # ALERT:Auto image Upgrade will start. This can terminate config         CLI sess
+                    # ion(s). Modified configuration will be lost. To stop Auto-image, in CLI do the 
+                    # following: 'edit; delete chassis auto-image-upgrade; commit'.  
+                    # Taking the sleep out made it work for me, at least once, hopefully consistently.                
+                    self.wait_write("/usr/sbin/mgd \"-ZS\" \"intialsetup-commit\" \"ex_series_auto_config\"", None)
+                    self.wait_write("cli", "root@:~ #")
+                    self.wait_write("configure", '>', 10)
+                    self.wait_write("delete chassis auto-image-upgrade") # when not using the mgd command this results in "warning: statement not found"
+                    self.wait_write("commit")
+                    self.wait_write("exit")
+                    # end patch
+
                     self.wait_write("request system power-off", '>')
                     self.wait_write("yes", 'Power Off the system')
                     self.running = True
@@ -129,7 +167,7 @@ class VMX_vcp(vrnetlab.VM):
         """
         self.wait_write("cli", None)
         self.wait_write("configure", '>', 10)
-        self.wait_write("set chassis fpc 0 pic 0 number-of-ports 96")
+        self.wait_write("set chassis fpc 0 pic 0 number-of-ports 1")
         self.wait_write("set system services ssh")
         self.wait_write("set system services netconf ssh")
         self.wait_write("set system services netconf rfc-compliant")
@@ -170,7 +208,7 @@ class VMX_vfpc(vrnetlab.VM):
     def __init__(self, version):
         super(VMX_vfpc, self).__init__(None, None, disk_image = "/vmx/vfpc.img", num=1)
         self.version = version
-        self.num_nics = 96
+        self.num_nics = 1
 
         self.nic_type = "virtio-net-pci"
         self.qemu_args.extend(["-cpu", "SandyBridge", "-M", "pc", "-smp", "3"])

---
- any_errors_fatal: yes
  hosts: routinator
  connection: local
  environment:
    DOCKER_CERT_PATH: "{{ hostvars['routinator'].dm_DOCKER_CERT_PATH }}"
    DOCKER_HOST: "{{ hostvars['routinator'].dm_DOCKER_HOST }}"
    DOCKER_MACHINE_NAME: "{{ hostvars['routinator'].dm_DOCKER_MACHINE_NAME }}"
    DOCKER_TLS_VERIFY: "{{ hostvars['routinator'].dm_DOCKER_TLS_VERIFY }}"
  tasks:
  - name: "FETCH ROUTINATOR LOG"
    command: docker logs routinator
    register: result
    changed_when: false

  - name: "FIND MOST RECENT SERIAL NUMBER IN ROUTINATOR LOG"
    set_fact:
      routinator_serial: "{{ result.stderr_lines | select('match', '^New serial is ([0-9]+)') | list | last | regex_search('([0-9]+)', '\\1') | first }}"

  - name: "SHOW FOUND ROUTINATOR SERIAL NUMBER"
    debug: var=routinator_serial

  # TODO: Use tempfile.
  - name: "FETCH FULL ROUTINATOR VRP DATABASE"
    get_url:
      url: "http://{{ hostvars['routinator'].ansible_host }}:9556/json"
      dest: /tmp/routinator.json

  - name: "PARSE, TRANSFORM AND SORT ROUTINATOR VRPS"
    set_fact:
      routinator_vrps: "{{ lookup('file', '/tmp/routinator.json') | from_json | json_query(qry) }}"
    vars:
      qry: "roas[].join('|', [asn, prefix, to_string(maxLength)]) | sort(@)"

  # Example output: "Transformed 81560 Routinator VRPs into format ['AS0|103.209.125.0/24|24', 'AS0|103.209.127.0/24|24', 'AS0|103.237.95.0/24|24']..."
  - name: "SHOW COUNT OF ROUTINATOR VRPS PROCESSED"
    debug:
      msg: "Transformed {{ routinator_vrps | length }} Routinator VRPs into format {{ routinator_vrps[0:3] }}..."

- hosts: routers
  tasks:
  - block:
    - name: "WAIT FOR ROUTER TO HAVE ORIGIN VALIDATION SESSION ID {{ routinator_serial }}.."
      include_tasks: tasks-get-session-id.yml
      until: ovdb.sessions[0].session_id == routinator_serial
      retries: 60
      delay: 10
      failed_when: ovdb.sessions[0].session_id != routinator_serial

    # Fetch the origin-validation Validated ROA Payload (VRP) database and transform the VRPs
    # into Routinator-like JSON structure ({ asn, prefix, maxLength }).
    - name: "FETCH FULL RPKI DATABASE FROM ROUTER"
      include_tasks: "tasks-fetch-full-rpki-db-{{ router_type }}.yml"
      vars:
        router_type: "{{ dm_tags.split(',')[0].split(':')[1] }}"

    # TODO: this is SLOW, can we speed it up?
    - name: "PARSE, TRANSFORM AND SORT ROUTER VRPS"
      set_fact:
        router_vrps: "{{ result.stdout[1] | parse_cli(parser_schema) | json_query(qry) }}"
      vars:
        parser_schema: "{{ lookup('env', 'GANTRY_BIND_MOUNT_GUEST_DIR') }}/parser-{{ dm_tags.split(',')[0].split(':')[1] }}-rpki-vrps.yml"
        qry: "vrps[].join('|', [asn, prefix, to_string(maxLength)]) | sort(@)"

    # Example output: "Transformed 81577 router VRPs into format ['AS0|103.209.125.0/24|24', 'AS0|103.209.127.0/24|24', 'AS0|103.237.95.0/24|24']...
    - name: "SHOW COUNT OF ROUTER VRPS PROCESSED"
      debug:
        msg: "Transformed {{ router_vrps | length }} router VRPs into format {{ router_vrps[0:3] }}..."

    # Unusably slow...
    # - debug:
    #     msg: "Symmetric Difference: {{ routinator_vrps | symmetric_difference(router_vrps) }}"
    # Instead do the block below:
    - block:
      - name: "GENERATE TEMPORARY FILE NAMES FOR VRP DIFF"
        tempfile:
        with_items:
          - routinator_vrps
          - router_vrps
        register: result

      - name: "UNPACK TEMP FILE NAME GENERATION RESULT"
        set_fact:
          tmpfiles: "{{ result.results }}"

      - name: "WRITE VRPS TO TEMPORARY FILES FOR DIFF"
        copy:
          content: "{{ lookup('vars', item.item) | join('\n') }}"
          dest: "{{ item.path }}"
        with_items: "{{ tmpfiles }}"
    
      - name: "CAPTURE FIRST FEW LINES OF FILES TO BE DIFFED"
        command: "head -n 3 {{ tmpfiles[0].path }} {{ tmpfiles[1].path }}"
        register: result

      - name: "SHOW FIRST FEW LINES OF FILES TO BE DIFFED"
        debug: var=result.stdout_lines

      - name: "DIFF VRP TEMPORARY FILES"
        command: "diff {{ tmpfiles[0].path }} {{ tmpfiles[1].path }}"
        register: result
        failed_when: result.rc < 0 or result.rc > 1
        no_log: yes

      - name: "SHOW RAW VRP DIFF RESULT"
        debug: var=result.stdout_lines

      - name: "SHOW VRP DB DIFFERENCES"
        fail:
          msg: "Routinator and router VRP sets for serial '{{ routinator_serial }}' differ: extra/missing/total VRPs: {{ num_extra }}/{{ num_missing }}/{{ total_vrps }}"
        when: result.rc != 0
        vars:
          num_extra: "{{ result.stdout | regex_findall('>') | length }}"
          num_missing: "{{ result.stdout | regex_findall('<') | length }}"
          total_vrps: "{{ routinator_vrps | length }}"
    
      - name: "SHOW VRP DB EQUALITY SUMMARY"
        debug:
          msg: "For Routinator serial {{ routinator_serial }} the {{ router_vrps | length }} router VRPs are the same as the {{ routinator_vrps | length }} Routinator VRPs"
        when: result.rc == 0

      always:
        - name: "DELETE TEMPORARY VRP DIFF FILES"
          file:
            state: absent
            path: "{{ item.path }}"
          with_items: "{{ tmpfiles }}"

    connection: local
    vars:
      router_ip: "{{ ansible_host }}"
      routinator_ip: "{{ hostvars['routinator'].ansible_host }}"
      routinator_serial: "{{ hostvars['routinator']['routinator_serial'] }}"
      routinator_vrps: "{{ hostvars['routinator']['routinator_vrps'] }}"
      provider:
        host: "{{ ansible_host }}"
        username: "{{ router_user }}"
        password: "{{ router_pass }}"
        port: "{{ router_port_external }}"
        timeout: 1800
    module_defaults:
      sros_config:
        provider: "{{ provider }}"
      sros_command:
        provider: "{{ provider }}"
      junos_config:
        provider: "{{ provider }}"
      junos_command:
        provider: "{{ provider }}"
